# Generated by Django 5.1.4 on 2024-12-26 11:37

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='faqModel',
            fields=[
                ('index', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5000)])),
                ('question', models.CharField(max_length=300)),
                ('answer', models.TextField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='propModel',
            fields=[
                ('id', models.CharField(help_text='El identificador de una propiedad, debe ser único, no pueden haber más de una propiedad con un mismo identificador.', max_length=100, primary_key=True, serialize=False, verbose_name='Identificador')),
                ('title', models.CharField(blank=True, help_text='El título o nombre de la propiedad.', max_length=100, null=True, verbose_name='Título')),
                ('description', models.TextField(blank=True, help_text='La descripción de la propiedad.', max_length=2000, null=True, verbose_name='Descripción')),
                ('location', models.CharField(blank=True, help_text='La ubicación geográfica por zona de la propiedad.', max_length=200, null=True, verbose_name='Ubicación')),
                ('surface', models.IntegerField(blank=True, help_text='La superficie o área de la propiedad en metros cuadrados.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)], verbose_name='Superficie')),
                ('type', models.CharField(blank=True, help_text='El tipo de propiedad (piso, departamento, chalet, vivienda, etc.)', max_length=50, null=True, verbose_name='Tipo')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='El precio o valor de la propiedad en euros.', max_digits=15, null=True, verbose_name='Precio')),
                ('numberOfRooms', models.IntegerField(blank=True, help_text='El número de habitaciones de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones')),
                ('doubleBedRooms', models.IntegerField(blank=True, help_text='El número de habitaciones dobles de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones dobles')),
                ('simpleBedRooms', models.IntegerField(blank=True, help_text='El número de habitaciones simples de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones simples')),
                ('numberOfBathR', models.IntegerField(blank=True, help_text='El número de baños de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños')),
                ('fullBathrooms', models.IntegerField(blank=True, help_text='El número de baños completos de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños completos')),
                ('simpleBathrooms', models.IntegerField(blank=True, help_text='El número de baños simples de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños simples')),
                ('img1', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 1')),
                ('img2', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 2')),
                ('img3', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 3')),
                ('img4', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 4')),
                ('img5', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 5')),
                ('img6', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 6')),
                ('img7', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 7')),
                ('img8', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 8')),
                ('img9', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 9')),
                ('img10', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 10')),
                ('img11', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 11')),
                ('img12', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 12')),
                ('img13', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 13')),
                ('img14', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 14')),
                ('img15', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 15')),
                ('img16', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 16')),
                ('img17', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 17')),
                ('img18', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 18')),
                ('img19', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 19')),
                ('img20', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 20')),
                ('img21', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 21')),
                ('img22', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 22')),
                ('img23', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 23')),
                ('img24', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 24')),
                ('img25', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 25')),
                ('img26', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 26')),
                ('img27', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 27')),
                ('img28', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 28')),
                ('img29', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 29')),
                ('img30', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen 30')),
                ('mapImg', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Imagen de mapa')),
                ('garage', models.BooleanField(default=False, verbose_name='Garaje')),
                ('terraza', models.BooleanField(default=False, verbose_name='Terraza')),
                ('trastero', models.BooleanField(default=False, verbose_name='Trastero')),
                ('garden', models.BooleanField(default=False, verbose_name='Jardín')),
                ('elevator', models.BooleanField(default=False, verbose_name='Ascensor')),
                ('pool', models.BooleanField(default=False, verbose_name='Piscina')),
                ('balcon', models.BooleanField(default=False, verbose_name='Balcón')),
                ('plazaGarage', models.BooleanField(default=False, verbose_name='Plaza Garaje')),
                ('forSale', models.BooleanField(default=False, verbose_name='Para Venta')),
                ('clientSale', models.BooleanField(default=False, verbose_name='Cliente Venta')),
                ('is_published', models.BooleanField(default=False, verbose_name='Publicado')),
            ],
            options={
                'verbose_name': 'Propiedad',
                'verbose_name_plural': 'Propiedades',
            },
        ),
        migrations.CreateModel(
            name='reviewModel',
            fields=[
                ('name', models.CharField(help_text='Introduzca un nombre de cliente.', max_length=100, primary_key=True, serialize=False, verbose_name='Nombre')),
                ('rating', models.IntegerField(help_text='Introduzca una calificación entre 1 y 5.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación')),
                ('job', models.CharField(help_text='Introduzca la profesión del cliente.', max_length=50, verbose_name='Profesión')),
                ('title', models.CharField(help_text='Introduzca un título.', max_length=100, verbose_name='Título')),
                ('review', models.TextField(help_text='Introduzca un comentario.', max_length=300, verbose_name='Comentario')),
                ('img', models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Foto del cliente')),
            ],
            options={
                'verbose_name': 'Reseña',
                'verbose_name_plural': 'Reseñas',
            },
        ),
    ]
