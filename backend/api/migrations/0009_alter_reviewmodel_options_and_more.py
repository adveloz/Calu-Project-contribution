# Generated by Django 5.1.4 on 2024-12-25 16:41

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0008_alter_propmodel_options_alter_propmodel_balcon_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='reviewmodel',
            options={'verbose_name': 'Reseña', 'verbose_name_plural': 'Reseñas'},
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='description',
            field=models.TextField(blank=True, help_text='La descripción de la propiedad.', max_length=2000, null=True, verbose_name='Descripción'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='doubleBedRooms',
            field=models.IntegerField(blank=True, help_text='El número de habitaciones dobles de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones dobles'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='fullBathrooms',
            field=models.IntegerField(blank=True, help_text='El número de baños completos de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños completos'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='id',
            field=models.CharField(help_text='El identificador de una propiedad, debe ser único, no pueden haber más de una propiedad con un mismo identificador.', max_length=100, primary_key=True, serialize=False, verbose_name='Identificador'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='location',
            field=models.CharField(blank=True, help_text='La ubicación geográfica por zona de la propiedad.', max_length=200, null=True, verbose_name='Ubicación'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='numberOfBathR',
            field=models.IntegerField(blank=True, help_text='El número de baños de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='numberOfRooms',
            field=models.IntegerField(blank=True, help_text='El número de habitaciones de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='El precio o valor de la propiedad en euros.', max_digits=15, null=True, verbose_name='Precio'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='simpleBathrooms',
            field=models.IntegerField(blank=True, help_text='El número de baños simples de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Baños simples'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='simpleBedRooms',
            field=models.IntegerField(blank=True, help_text='El número de habitaciones simples de la propiedad.', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Habitaciones simples'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='surface',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='La superficie o área de la propiedad en metros cuadrados.', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)], verbose_name='Superficie'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='title',
            field=models.CharField(blank=True, help_text='El título o nombre de la propiedad.', max_length=100, null=True, verbose_name='Título'),
        ),
        migrations.AlterField(
            model_name='propmodel',
            name='type',
            field=models.CharField(blank=True, help_text='El tipo de propiedad (piso, departamento, chalet, vivienda, etc.)', max_length=50, null=True, verbose_name='Tipo'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='img',
            field=models.ImageField(blank=True, default='', null=True, upload_to='', verbose_name='Foto del cliente'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='job',
            field=models.CharField(help_text='Introduzca la profesión del cliente.', max_length=50, verbose_name='Profesión'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='name',
            field=models.CharField(help_text='Introduzca un nombre de cliente.', max_length=100, primary_key=True, serialize=False, verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='rating',
            field=models.IntegerField(help_text='Introduzca una calificación entre 1 y 5.', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='review',
            field=models.TextField(help_text='Introduzca un comentario.', max_length=300, verbose_name='Comentario'),
        ),
        migrations.AlterField(
            model_name='reviewmodel',
            name='title',
            field=models.CharField(help_text='Introduzca un título.', max_length=100, verbose_name='Título'),
        ),
    ]
